What happens when you initialize a repository? Why do you need to do it?

> Initialize a repository makes the contents of the folder to be made into a Git repository.
Without doing it we can do all operations that can be done on a Git repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

> staging area is different from working directory in that it can have a subset of files
that can be commited.

How can you use the staging area to make sure you have one commit per logical
change?

> Using git add command, one can stage the files to the staging area to be commited. 
This allows only a select few files to be commited per logical change and gives fine
grain control to the developer.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

> When one needs to introduce some experimental features in development environment at 
the same time have a stable version available for production. Also, when one to needs 
to have different variation of the app like a different language or different complexity,
branches are useful.

How do the diagrams help you visualize the branch structure?

> Diagrams help in visualizing the various branches and also various commits involved
in each of the branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

>


What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

>

