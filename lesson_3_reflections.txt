When would you want to use a remote repository rather than keeping all your work
local?

    When the repository is used by multiple users and or a single user accessing from multipe machines. Essentially, it is like having
    your code in cloud vs your local machine.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Pulling the changes manually gives user the control on when keep the 
    local repository in synch with remote. Also, any temporary changes done
    on remote would not accidentally get pulled.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is a copy of an existing repository of a different user in your
    own GitHub account. A clone is a copy of a exisiting repository either 
    from GitHub or one of other local repositories. Branches is a copy within
    a repository.
    Fork helps in maintaining the reference and giving credit to the original
    author at the same time having an independent instance for your own modifications.
    Clone just enables to make a copy of an existing repository.
    
    

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It enables to understand if the local branch is out of synch with last known
    snapshot of the remote.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without Git or GitHub, we would manually convey the changes to the team-members
    and ask them to review. Since, there wouldn't be a automatted workflow like
    GitHub, it would difficult to keep track of all changes. If a single user is
    managing the source code, then it would be easier to not to use Git and GitHub.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    When the changes to be reviewed and tested before merging into the stable production
    branch, other seperate branches are helpful. If a single use is working, then
    probably seperate branches might not be required to speed up the overall coding
    and testing time.
